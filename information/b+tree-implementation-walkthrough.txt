B+ Tree Logic Walkthrough

Get a number
##### CALLING INSERT FUNCTION #####
	If root is empty
		Create and add number
		Return to Calling function
	
	While not at the appropriate leaf node
		If node's data is an integer
			If num is less than data
				Move to left child
			If num is greater than data
				Move to right child
		If node's data is an array
			If Node has no mid child
				If num is less than data[0]
					Move to left child
				If num is less than data[1]
					Move to right child
			If Node has a mid child
				If num is less than data[0]
					Move to left child
				If num is less than data[1]
					Move to mid child
				If num is greater than data[1]
					Move to right child
	
	Found an appropriate leaf node to insert in
	If node's data is an integer
		If num = data
			Value is here
			Return to Calling Function
		Else
			Add to node
			
			While data count = 3
				##### CALLING SPLIT FUNCTION #####
				Get the parent of the passed node
				If node has no parent
					Splitting down so passed node becomes parent node
					Left Value becomes left child
					Mid/Right Values become right child
					Set passed node data to Middle Value
					Connect children to passed node
					Set parent of children to passed node
					
				If node has a parent
					Get the children of the passed node so we can check which child we're splitting
					If Parent only has Left & Right children
						If passed node is left child
							Add middle value in passed node to parent node
							Create new node and add middle and right values in passed node
							Set the parent of the new node to be child of passed node's parent
							Set child of passed node's parent to mid child
							Passed node gets data set to left value of passed node
							
						If passed node is right child
							Add middle value in passed node to parent node
							Create new node and add first value in passed node
							Set the parent of new node to be child of passed node's parent
							Set child of passed node's parent to middle child
							Passed node gets data set to middle and right values of passed node
							
					
				Return the number of values in the parent of the passed node
				##### END SPLIT FUNCTION #####
				Check the count
				
			Return to calling function
	If node's data is an array
		If num in data array
			Value is here
			Return to Calling Function
		Else
			Add to node
			
			While data count = 3
				##### CALLING SPLIT FUNCTION #####
				##### END SPLIT FUNCTION #####
				Check the count
			
			Return to calling function
##### END OF INSERT FUNCTION #####